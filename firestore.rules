rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Organizations collection
    match /organizations/{orgId} {
      // Allow authenticated users to create new organizations
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.ownerId;
      
      // Allow authenticated users to read for uniqueness checking (name field only)
      allow read: if request.auth != null;
      
      // Owner can do everything
      allow write, delete: if request.auth != null && 
        request.auth.uid == resource.data.ownerId;
    }
    
    // Members collection
    match /members/{memberId} {
      // Organization owner can do everything
      allow read, write, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/organizations/$(resource.data.organizationId)) &&
        get(/databases/$(database)/documents/organizations/$(resource.data.organizationId)).data.ownerId == request.auth.uid;
      
      // Users with org permissions can read
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/organization_permissions/$(request.auth.uid + '_' + resource.data.organizationId));
    }
    
    // Organization permissions collection
    match /organization_permissions/{permissionId} {
      // Users can create their own permissions (for new orgs)
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      
      // Users can read their own permissions
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Organization owners can manage permissions
      allow read, write, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/organizations/$(resource.data.organizationId)) &&
        get(/databases/$(database)/documents/organizations/$(resource.data.organizationId)).data.ownerId == request.auth.uid;
    }
  }
} 