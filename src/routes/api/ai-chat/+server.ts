import { json } from "@sveltejs/kit";
// @ts-ignore - runtime path alias resolution
import { openai } from "$lib/openai";
// @ts-ignore - type generated by SvelteKit build
import type { RequestHandler } from "./$types";

/**
 * POST /api/ai-chat
 * Body: { message: string }
 * Returns: { reply: string }
 */
export const POST: RequestHandler = async ({ request }) => {
  const { message } = await request.json();

  if (!message || typeof message !== "string") {
    return json({ error: "`message` (string) is required" }, { status: 400 });
  }

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: "You are OrganiChart's helpful AI assistant. Answer questions or help with tasks.",
        },
        { role: "user", content: message },
      ],
    });

    const reply = completion.choices[0].message?.content ?? "(no content)";
    return json({ reply });
  } catch (err) {
    console.error("OpenAI request failed", err);
    return json({ error: "AI request failed" }, { status: 500 });
  }
}; 