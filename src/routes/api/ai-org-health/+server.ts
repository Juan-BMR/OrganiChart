import { json } from "@sveltejs/kit";
// @ts-ignore - runtime path alias resolution
import { openai } from "$lib/openai";
// @ts-ignore - type generated by SvelteKit build
import type { RequestHandler } from "./$types";
// @ts-ignore - type from local module
import type { OrgHealthMetrics } from "$lib/orgchart/analyzeOrgHealth";

export const POST: RequestHandler = async ({ request }) => {
  const { metrics, organizationId } = await request.json() as { 
    metrics: OrgHealthMetrics; 
    organizationId: string; 
  };

  if (!metrics) {
    return json({ error: "Metrics are required" }, { status: 400 });
  }

  try {
    // Prepare a summary of the metrics for the AI
    const metricsSummary = `
Organization Analysis Results:
- Total Members: ${metrics.totalMembers}
- Organization Depth: ${metrics.maxDepth} levels
- Average Span of Control: ${metrics.averageSpanOfControl.toFixed(1)}
- Managers with Issues: ${metrics.managersWithIssues.length}
- Orphaned Members: ${metrics.orphanedMembers.length}
- Communication Risks: ${metrics.communicationRisk.length}
- Succession Gaps: ${metrics.successionGaps.filter(g => !g.hasSuccessor).length}

Management Issues:
${metrics.managersWithIssues.map(i => `- ${i.manager.name}: ${i.directReports} reports (${i.issue})`).join('\n')}

Critical Succession Gaps:
${metrics.successionGaps.filter(g => g.risk === 'critical' || g.risk === 'high').map(g => `- ${g.position.name} (${g.position.role}): ${g.hasSuccessor ? 'has successor' : 'NO SUCCESSOR'}`).join('\n')}

Team Distribution:
${metrics.teamDistribution.map(d => `- Level ${d.level + 1}: ${d.count} members (${d.percentage.toFixed(1)}%)`).join('\n')}
`;

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `You are an expert organizational consultant analyzing org charts. 
          Provide actionable insights and recommendations based on the metrics provided.
          Focus on:
          1. Key strengths of the organization
          2. Critical issues that need immediate attention
          3. Strategic recommendations for improvement
          4. Long-term organizational health considerations
          
          Be specific, practical, and prioritize the most important issues.
          Format your response with clear sections and bullet points.`
        },
        {
          role: "user",
          content: metricsSummary
        }
      ],
      temperature: 0.7,
      max_tokens: 1000
    });

    const insights = completion.choices[0].message?.content ?? "Unable to generate insights.";
    
    return json({ insights });
  } catch (err) {
    console.error("AI org health analysis failed", err);
    return json({ error: "AI analysis failed" }, { status: 500 });
  }
};